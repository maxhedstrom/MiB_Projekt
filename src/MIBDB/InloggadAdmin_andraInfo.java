/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MIBDB;

import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author maxhe
 */
public class InloggadAdmin_andraInfo extends javax.swing.JFrame {
private static InfDB idb;  
    /**
     * Creates new form InloggadAdmin_Andra_Agent
     */
    public InloggadAdmin_andraInfo() {
        initComponents();
        txtID.selectAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNamn = new javax.swing.JTextField();
        txtTelefon = new javax.swing.JTextField();
        txtDatum = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        btnSok = new javax.swing.JButton();
        lblRubrik = new javax.swing.JLabel();
        txtAdmin = new javax.swing.JTextField();
        txtLosen = new javax.swing.JTextField();
        txtOmrade = new javax.swing.JTextField();
        lblNamn = new javax.swing.JLabel();
        lblTelefon = new javax.swing.JLabel();
        lblDatum = new javax.swing.JLabel();
        lblAdmin = new javax.swing.JLabel();
        lblLosen = new javax.swing.JLabel();
        lblOmrade = new javax.swing.JLabel();
        btnTelefon = new javax.swing.JButton();
        btnNamn = new javax.swing.JButton();
        btnDatum = new javax.swing.JButton();
        btnAdmin = new javax.swing.JButton();
        btnLosen = new javax.swing.JButton();
        btnOmrade = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtNamn.setText("Namn");
        txtNamn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamnActionPerformed(evt);
            }
        });

        txtTelefon.setText("Telefon");

        txtDatum.setText("Anställningsdatum");
        txtDatum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDatumActionPerformed(evt);
            }
        });

        txtID.setText("ID på Agent");
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        btnSok.setText("Hitta agent");
        btnSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSokActionPerformed(evt);
            }
        });

        lblRubrik.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblRubrik.setText("Välkommen, fyll i ID på den Agent  du vill ändra information om!");

        txtAdmin.setText("Administrator");

        txtLosen.setText("Lösenord");

        txtOmrade.setText("Område");

        lblNamn.setText("Namn:");

        lblTelefon.setText("Telefon:");

        lblDatum.setText("Anställningsdatum:");

        lblAdmin.setText("Administrator:");

        lblLosen.setText("Lösenord:");

        lblOmrade.setText("Område:");

        btnTelefon.setText("Verkställ");
        btnTelefon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelefonActionPerformed(evt);
            }
        });

        btnNamn.setText("Verkställ");
        btnNamn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNamnActionPerformed(evt);
            }
        });

        btnDatum.setText("Verkställ");
        btnDatum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDatumActionPerformed(evt);
            }
        });

        btnAdmin.setText("Verkställ");
        btnAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminActionPerformed(evt);
            }
        });

        btnLosen.setText("Verkställ");
        btnLosen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLosenActionPerformed(evt);
            }
        });

        btnOmrade.setText("Verkställ");
        btnOmrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOmradeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRubrik, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLosen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblOmrade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtTelefon, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDatum, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAdmin, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtLosen, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtOmrade, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnTelefon, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnDatum, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnAdmin, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnLosen, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnOmrade, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(btnNamn)))
                        .addGap(116, 116, 116))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSok)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblRubrik)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSok)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNamn))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTelefon))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDatum))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdmin)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLosen)
                            .addComponent(txtLosen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLosen, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnOmrade)
                            .addComponent(txtOmrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOmrade, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(218, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNamnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamnActionPerformed

    private void txtDatumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDatumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDatumActionPerformed

    private void btnSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSokActionPerformed
        /**
         * @param ID på agent att korregiera. 
         * Om ID finns i databas fylls varje text ruta i med nuvarande
         * information om agent för att göra det tydligt.
         * 
         */
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
            System.out.println("funka");
            
            String input = txtID.getText();
            String fraga = "SELECT * FROM Agent WHERE Agent_ID = '"+input+"'";
            String svar = idb.fetchSingle(fraga);
            
            
            //Fyller i all information i varje ruta om agenten som blir angiven i.
            String namn1 = "";
            if (svar != null){
                String namnSQL = ("SELECT Namn FROM Agent WHERE Agent_ID = '"+input+"'");
                namn1 = idb.fetchSingle(namnSQL);
                txtNamn.setText(namn1);
            }else {
                txtNamn.setText("Finns ej i databas!");
            }
            
             String telefon1 = "";
            if (svar != null){
                String SQL = ("SELECT Telefon FROM Agent WHERE Agent_ID = '"+input+"'");
                telefon1 = idb.fetchSingle(SQL);
                txtTelefon.setText(telefon1);
            }else {
                txtTelefon.setText("Finns ej i databas!");
            }
            
             String datum1 = "";
            if (svar != null){
                String SQL = ("SELECT Anstallningsdatum FROM Agent WHERE Agent_ID = '"+input+"'");
                datum1 = idb.fetchSingle(SQL);
                txtDatum.setText(datum1);
            }else {
                txtDatum.setText("Finns ej i databas!");
            }
            
             String admin1 = "";
            if (svar != null){
                String SQL = ("SELECT Administrator FROM Agent WHERE Agent_ID = '"+input+"'");
                admin1 = idb.fetchSingle(SQL);
                txtAdmin.setText(admin1);
            }else {
                txtAdmin.setText("Finns ej i databas!");
            }
            
            String losen1 = "";
            if (svar != null){
                String SQL = ("SELECT Losenord FROM Agent WHERE Agent_ID = '"+input+"'");
                losen1 = idb.fetchSingle(SQL);
                txtLosen.setText(losen1);
            }else {
                txtLosen.setText("Finns ej i databas!");
            }
            
            String omrade1 = "";
            if (svar != null){
                String SQL = ("SELECT Omrade FROM Agent WHERE Agent_ID = '"+input+"'");
                omrade1 = idb.fetchSingle(SQL);
                txtOmrade.setText(omrade1);
            }else {
                txtOmrade.setText("Finns ej i databas!");
            }
            
           
            
            
            
        } catch (InfException ettUndantag) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        }
        
    }//GEN-LAST:event_btnSokActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed

    }//GEN-LAST:event_txtIDActionPerformed

    private void btnNamnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNamnActionPerformed
            /**
             * Ändrar namn på agent.
             */
   
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
            System.out.println("funka");
            
            String idAttAndra = txtID.getText();
            String nyttNamn = txtNamn.getText();
            
            String fraga = "UPDATE agent SET namn ='" + nyttNamn + "'WHERE Agent_ID= '" + idAttAndra+"'";
            if (nyttNamn.isEmpty()){
            idb.update(fraga);
            JOptionPane.showMessageDialog(null, "Rutan är tom, fyll i med det namn du vill ändra!");
            }else {
            idb.update(fraga);
            JOptionPane.showMessageDialog(null, "Namnet är ändrat");
               
            }
        } catch (InfException ettUndantag) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        }
    }//GEN-LAST:event_btnNamnActionPerformed

    private void btnTelefonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelefonActionPerformed
              /**
              * Ändrar telefonnummer på agent.
             */
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
            System.out.println("funka");
            
            String idAttAndra = txtID.getText();
            String nyTelefon = txtTelefon.getText();
            
            String fraga = "UPDATE agent SET Telefon ='" + nyTelefon + "'WHERE Agent_ID= '" + idAttAndra+"'";
            if (nyTelefon.isEmpty()){
            idb.update(fraga);
            JOptionPane.showMessageDialog(null, "Rutan är tom, fyll i med det telefonnummer du vill ändra!");
            }else {
            idb.update(fraga);
            JOptionPane.showMessageDialog(null, "Telefonnummer är ändrat");
               
            }
        } catch (InfException ettUndantag) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        }
    }//GEN-LAST:event_btnTelefonActionPerformed

    private void btnDatumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDatumActionPerformed
             /**
             * Ändrar anställningsdatum på agent.
             */
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
            System.out.println("funka");
            
            String idAttAndra = txtID.getText();
            String nyttDatum = txtDatum.getText();
            
            String fraga = "UPDATE agent SET Anstallningsdatum ='" + nyttDatum + "'WHERE Agent_ID= '" + idAttAndra+"'";
            if (nyttDatum.isEmpty()){
            idb.update(fraga);
            JOptionPane.showMessageDialog(null, "Rutan är tom, fyll i till anställningsdatum du vill korrigera!");
            }else {
            idb.update(fraga);
            JOptionPane.showMessageDialog(null, "Anställningsdatum är ändrat");
               
            }
        } catch (InfException ettUndantag) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        }
    }//GEN-LAST:event_btnDatumActionPerformed

    private void btnAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminActionPerformed
            /**
             * Ändrar Admin post på agent.
             */
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
            System.out.println("funka");
            
            String idAttAndra = txtID.getText();
            String nyAdmin = txtAdmin.getText();
            
            String fraga = "UPDATE agent SET Administrator ='" + nyAdmin + "'WHERE Agent_ID= '" + idAttAndra+"'";
            if (nyAdmin.isEmpty()){
            idb.update(fraga);
            JOptionPane.showMessageDialog(null, "Rutan är tom, fyll i ny admin post!");
            }else {
            idb.update(fraga);
            JOptionPane.showMessageDialog(null, "Admin post är ändrad!");
               
            }
        } catch (InfException ettUndantag) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        }
    }//GEN-LAST:event_btnAdminActionPerformed

    private void btnLosenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLosenActionPerformed
             /**
             * Ändrar lösenord på agent.
             */       
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
            System.out.println("funka");
            
            String idAttAndra = txtID.getText();
            String nyttLosenord = txtLosen.getText();
            
            String fraga = "UPDATE agent SET Losenord ='" + nyttLosenord + "'WHERE Agent_ID= '" + idAttAndra+"'";
            if (nyttLosenord.isEmpty()){
            idb.update(fraga);
            JOptionPane.showMessageDialog(null, "Rutan är tom, fyll i nytt lösenord!");
            }else {
            idb.update(fraga);
            JOptionPane.showMessageDialog(null, "Lösenordet har nu uppdaterats!");
               
            }
        } catch (InfException ettUndantag) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        }
    }//GEN-LAST:event_btnLosenActionPerformed

    private void btnOmradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOmradeActionPerformed
             /**
             * Ändrar område på agent.
             */
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
            System.out.println("funka");
            
            String idAttAndra = txtID.getText();
            String nyttOmrade = txtOmrade.getText();
            
            String fraga = "UPDATE agent SET Losenord ='" + nyttOmrade + "'WHERE Agent_ID= '" + idAttAndra+"'";
            if (nyttOmrade.isEmpty()){
            idb.update(fraga);
            JOptionPane.showMessageDialog(null, "Rutan är tom, fyll i nytt område!");
            }else {
            idb.update(fraga);
            JOptionPane.showMessageDialog(null, "Nytt område har nu uppdaterats!");
               
            }
        } catch (InfException ettUndantag) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        }
    }//GEN-LAST:event_btnOmradeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InloggadAdmin_andraInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InloggadAdmin_andraInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InloggadAdmin_andraInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InloggadAdmin_andraInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InloggadAdmin_andraInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdmin;
    private javax.swing.JButton btnDatum;
    private javax.swing.JButton btnLosen;
    private javax.swing.JButton btnNamn;
    private javax.swing.JButton btnOmrade;
    private javax.swing.JButton btnSok;
    private javax.swing.JButton btnTelefon;
    private javax.swing.JLabel lblAdmin;
    private javax.swing.JLabel lblDatum;
    private javax.swing.JLabel lblLosen;
    private javax.swing.JLabel lblNamn;
    private javax.swing.JLabel lblOmrade;
    private javax.swing.JLabel lblRubrik;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JTextField txtAdmin;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtLosen;
    private javax.swing.JTextField txtNamn;
    private javax.swing.JTextField txtOmrade;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables
}
